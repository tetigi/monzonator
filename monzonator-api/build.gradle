apply plugin: 'kotlin'

dependencies {
    compile 'joda-time:joda-time'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jre8'
    compile 'org.jetbrains.kotlin:kotlin-reflect'
    compile 'com.palantir.remoting3:jersey-servers'
    compile 'com.palantir.tokens:auth-tokens'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda'
    compile 'com.squareup.retrofit2:retrofit'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

def pomConfig = {
	licenses {
		license {
			name "The Apache Software License, Version 2.0"
			url "http://www.apache.org/licenses/LICENSE-2.0.txt"
			distribution "repo"
		}
	}
	developers {
		developer {
			id "tetigi"
			name "Luke Tomlin"
			email "luke.tomlin@gmail.com"
		}
	}

	scm {
		url "https://github.com/tetigi/monzonator"
	}
}

bintray {
	user = System.getProperty('bintray.user')
	key = System.getProperty('bintray.key')
	publications = ['mavenPublication']

	pkg {
		repo = 'Monzonator'
		name = 'monzonator-api'
		userOrg = 'tetigi'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/tetigi/monzonator.git'
		version {
			name = gitVersion()
			desc = gitVersion()
			released  = new Date()
		}
	}

}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.tetigi'
            artifactId 'monzonator-api'
            version gitVersion()
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'An it-just-works Kotlin lib for Monzo.')
                root.appendNode('name', 'monzonator-api')
                root.appendNode('url', 'https://github.com/tetigi/monzonator')
                root.children().last() + pomConfig
            }
        }
    }
}
